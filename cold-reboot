#!/usr/bin/python

# Copyright (c) 2019 Bartosz Lipinski (blipinsk)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import os
import sys
from time import sleep

def verifyPythonVersion():
    major = sys.version_info[0]
    minor = sys.version_info[1]

    if (major < 2) or (major == 2 and minor < 7) :
        raise Exception("Must be using Python >=2.7")

def getRunningEmulatorsNames():
    devices = check_output(["adb", "devices"]).split('\n')

    def onlyEmulatorRows(device):
        if "emulator" in device:
            return True
        else:
            return False

    def toEmulatorName(emulatorRow):
        nameEnd = emulatorRow.index('\t')
        return emulatorRow[:nameEnd]

    emulatorRows = filter(onlyEmulatorRows, devices)
    return map(toEmulatorName, emulatorRows)

def mapToEmulatorInfo(runningEmulators):
    def toEmulatorInfo(emulator):
        return EmulatorInfo(emulator)

    return map(toEmulatorInfo, runningEmulators)

def coldRebootEmulators(runningAvdEmulators):
    FNULL = open(os.devnull, 'w')

    for emu in runningAvdEmulators:
        print("Found emulator: " + emu.emulatorName + " "+ emu.avdName)
        Popen(["adb", "-s", emu.emulatorName, "emu", "kill"], stdout=FNULL, stderr=STDOUT)
        print("Cold rebooting...")
        sleep(1.0) #we're waiting for killing emulators
        Popen(["emulator", "@" + emu.avdName, "-no-snapshot-load"], stdout=FNULL, stderr=STDOUT)


class EmulatorInfo:

    def __init__(self, emulatorName):
        self.emulatorName = emulatorName
        self.avdName = self.resolveAvdName()

    def resolveAvdName(self):
        def onlyAvdName(avdNameRow):
            if avdNameRow=='OK':
                return False
            else:
                return True

        avdNameRows = check_output(["adb", "-s", self.emulatorName, "emu", "avd", "name"]).strip().split('\n')
        return filter(onlyAvdName, avdNameRows)[0].strip()

# ------------

verifyPythonVersion()

from subprocess import check_output, Popen, PIPE, STDOUT

runningEmulators = getRunningEmulatorsNames()
runningAvdEmulators = mapToEmulatorInfo(runningEmulators)
coldRebootEmulators(runningAvdEmulators)
